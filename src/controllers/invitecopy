async function AssignInvite(req, res) {
  try {
    const oauthData = await req.cookies.access_token;
    // discrod userid from our db
    const discordUser = req.cookies.DiscordUser;
    const userCookie = jwt.verify(discordUser, process.env.API_TOKEN);
    const _id = userCookie.userid;
    // get campaign
    let limit = 1;
    let skip = 0;
    // getting link from invite
    const invite = await getInvite(limit, skip);
    // check if already joined and left in our db
    const joiner = await checkLink(_id, invite);
    console.log("joiner", joiner);

    if (joiner.length > 0) {
      limit = limit + 1;
      skip = skip + 1;
      const invite = await getInvite(limit, skip);

      // fetch new link
      res.send({
        invite,
        joiner: joiner[0],
      });
    } else {
      // check existence in server
      const isExist = await checkGuildMember(oauthData, invite.serverId);
      if (isExist.user && isExist !== null) {
        res.send(isExist);
      } else {
        const achieved = await invite.target.achieved;
        const newAchieved = achieved + 1;
        const updateInvite = { "target.achieved": newAchieved };
        // increasing acheivment
        const inviteData = await Invite.findOneAndUpdate(
          { _id: invite._id },
          { $set: updateInvite },
          { new: true }
        );

        // assigning link to user for 60 sec
        const linking = await new Link({
          uid: _id,
          serverId: invite.serverId,
        });
        const response = await linking.save();

        // callback to check user existence after 60 seconds
        new Cron("59 * * * * *", { maxRuns: 1 }, () => {
          console.log("cron.schedule");
          checkAssigningStatus(_id, oauthData, invite.serverId, inviteData);
        });

        res.status(200).send({
          invite: inviteData,
          joiner: { ...response._doc, remaining: -59 },
        });
      }
    }
  } catch (error) {
    console.log(error.message);
    res.status(401).json({ AssignInvite: error.message });
  }
}